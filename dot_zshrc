#==================
# Zsh
#==================
source ~/.zplug/init.zsh
# 過去に入力したコマンドの履歴が灰色のサジェストで出る
zplug "zsh-users/zsh-autosuggestions"
# 256色表示にする
zplug "chrissicool/zsh-256color"
# シンタックスハイライト
zplug "zsh-users/zsh-syntax-highlighting"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi
# Then, source plugins and add commands to $PATH
zplug load

# Zsh History ======
HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=1000000
# 履歴を共有
set -o SHARE_HISTORY
set -o HIST_REDUCE_BLANKS
set -o HIST_FIND_NO_DUPS
set -o EXTENDED_HISTORY
# 重複した履歴を無視
set -o HIST_IGNORE_DUPS
set -o HIST_IGNORE_ALL_DUPS
function chpwd() { ls }
DIRSTACKSIZE=30
# インクリメンタルサーチ
function select-history() {
  BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt="History > ")
  CURSOR=$#BUFFER
}
zle -N select-history
bindkey '^r' select-history

# Zsh Directory Jump =====
set -o auto_pushd
set -o pushd_ignore_dups
set -o auto_cd

#==================
# Bindings
#==================
# emacs key bind
bindkey -e
bindkey "^[^[[D" backward-word
bindkey "^[^[[C" forward-word

#==================
# Alias
#==================
alias cza="chezmoi apply;zsh"
alias cze="chezmoi edit"
alias p8="ping 8.8.8.8"
alias tf="terraform"
alias gc="git checkout"
alias gcb="git checkout -b"
alias kb="kubectl"
alias kbe="kubectl exec"
alias dc="docker compose"
alias lg="lazygit"
alias ls="exa -alhg"
alias cat="bat --style=plain"
alias tree="exa -T"
alias dps="docker ps"
alias ava="aws-vault"
alias cw='cd $(ghq list -p | fzf)'
alias gcm="git checkout $(git remote show origin | grep 'HEAD branch' | awk '{print $3}')"
#==================
# Extra configuration
#==================

# Credentials
if [ -f "~/.zshrc_secret" ]; then
  source "~/.zshrc_secret"
fi

# z
. `/opt/homebrew/bin/brew --prefix`/etc/profile.d/z.sh

export EDITOR="code"

# brew
eval "$(/opt/homebrew/bin/brew shellenv)"

# rtx
alias rtx="mise"
eval "$(rtx activate zsh)"
export RTX_DATA_DIR=$HOME/.rtx
export RTX_CACHE_DIR=$RTX_DATA_DIR/cache

# Fig
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"

# AWS-valut
export AWS_VAULT_KEYCHAIN_NAME="login"
export AWS_ASSUME_ROLE_TTL="1h"

# Starship
eval "$(starship init zsh)"

#==================
# Warp config
#==================
printf '\eP$f{"hook": "SourcedRcFileForWarp", "value": { "shell": "zsh"}}\x9c'
